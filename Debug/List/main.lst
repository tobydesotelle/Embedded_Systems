###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          04/Dec/2022  14:29:42
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Tobias Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\main.c
#    Command line  =  
#        -f C:\Users\TOBIAS~1\AppData\Local\Temp\EWDB02.tmp ("C:\Users\Tobias
#        Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\main.c" -lC
#        "C:\Users\Tobias Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\Debug\List" -o
#        "C:\Users\Tobias Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\Debug\Obj" --no_unroll
#        --no_inline --no_tbaa --debug -D__MSP430FR2355__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.5\430\lib\dlib\dl430xlsfn.h" -I ./ --core=430X --data_model=small
#        -Om --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\Tobias Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\Debug\List\main.lst
#    Object file   =  
#        C:\Users\Tobias Desotelle\OneDrive - UNC
#        Asheville\Documents\GitHub\Embedded_Systems\Debug\Obj\main.r43
#
###############################################################################

C:\Users\Tobias Desotelle\OneDrive - UNC Asheville\Documents\GitHub\Embedded_Systems\main.c
      1          /*
      2            Description: This file contains the Main Routine - "While" Operating System
      3            
      4          
      5            Tobias Desotelle
      6            Team: Magic Smoke
      7            October 14 2022
      8            Built with IAR Embedded Workbench Version: (7.21.1)
      9          
     10            Project 10 v1.0
     11          */
     12          
     13          
     14          //Coding Check List
     15          //create adc readout menu
     16          //fix measurment function for edge cases
     17          //Build pid debuging display
     18          
     19          
     20          //Make pid_update updated from timer
     21          //
     22          //Make serial lighter
     23          //faster ADC
     24          //
     25          //build ping wifi server
     26          
     27          #include "macros.h"

   \                                 In  segment DATA16_AN, at 0x130
   \   union <unnamed> _A_PM5CTL0_L
   \                     _A_PM5CTL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x45c
   \   union <unnamed> _A_TB3CCR5_L
   \                     _A_TB3CCR5_L:
   \   000000                DS8 2
     28          

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     29          volatile unsigned short motor_control_bits;
   \                     motor_control_bits:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     30          volatile unsigned char switch_control;
   \                     switch_control:
   \   000000                DS8 1

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     31          volatile unsigned short timer_bits;
   \                     timer_bits:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     32          volatile unsigned short serial_bits;
   \                     serial_bits:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     33          volatile unsigned short display_bits;
   \                     display_bits:
   \   000000                DS8 2
     34          extern short timing;
     35          extern PIDController pid;

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     36          int wheel_test = 0;
   \                     wheel_test:
   \   000000                DS8 2

   \                                 In  segment CODE, align 2
     37          void main(void){
   \                     main:
     38            PM5CTL0 &= ~LOCKLPM5;// Disable the GPIO power-on default high-impedance mode to activate
   \   000000   92C33001     BIC.W   #0x1, &0x130
     39            Master_Init();
   \   000004   ........     CALLA   #Master_Init
     40            PIDController_Init(&pid);
   \   000008   3C40....     MOV.W   #pid, R12
   \   00000C   ........     CALLA   #PIDController_Init
     41            BACKLIGHT = 0; // Backlight control for late night programming
   \   000010   82435C04     MOV.W   #0x0, &0x45c
     42            while(!((display_bits) & (Splash_bit))){}//Wait for 2 seconds to boot IOT 
   \                     ??main_0:
   \   000014   92B3....     BIT.W   #0x1, &display_bits
   \   000018   FD27         JEQ     ??main_0
     43            IOT_main();//uncommet when IOT Works
   \   00001A   ........     CALLA   #IOT_main
     44            line_calibration();
   \   00001E   ........     CALLA   #line_calibration
     45            timing=1;
   \   000022   9243....     MOV.W   #0x1, &timing
     46            while(ALWAYS){
     47              //menu_state_machine();
     48              process_switches();
   \                     ??main_1:
   \   000026   ........     CALLA   #process_switches
     49              Command_state();
   \   00002A   ........     CALLA   #Command_state
     50              Display_Process();
   \   00002E   ........     CALLA   #Display_Process
     51              //P3OUT ^= TEST_PROBE;   	// Change State of TEST_PROBE OFF
     52              diplay_pad();
   \   000032   ........     CALLA   #diplay_pad
   \   000036   F73F         JMP     ??main_1
   \   000038   0343         NOP
   \   00003A                REQUIRE _A_PM5CTL0_L
   \   00003A                REQUIRE _A_TB3CCR5_L
     53            }
     54          }
     55            

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   main
        4   -> Command_state
        4   -> Display_Process
        4   -> IOT_main
        4   -> Master_Init
        4   -> PIDController_Init
        4   -> diplay_pad
        4   -> line_calibration
        4   -> process_switches


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  _A_PM5CTL0_L
       2  _A_TB3CCR5_L
       2  display_bits
      58  main
       2  motor_control_bits
       2  serial_bits
       1  switch_control
       2  timer_bits
       2  wheel_test

 
 58 bytes in segment CODE
  4 bytes in segment DATA16_AN
 11 bytes in segment DATA16_Z
 
 58 bytes of CODE memory
 11 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: none
